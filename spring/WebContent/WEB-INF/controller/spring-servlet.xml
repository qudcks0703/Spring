<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.3.xsd"
	>
	<!-- 위에 작성해야함. 최우선 순위여야함 다운로드는 별도의 창을 만듬 페이지이동없음
		BeanNameViewResolver 는 새로운 창을 구성할때 우선순위를 주기 위해 사용
		지정하지 않으면 이동 먼저 처리하려함. property view에 대한 우선순위를 지정하는 옵션
		다운로드는 페이지 이동전에 다운로드 창이 뜨게 하기 위해 반드시 우선순위0으로 해야함
		view를 담당하는 ViewResolver에는 0보다 우선순위가 낮은 1을 지정
	 -->
	<bean id="fileDown" class="test.spring.bean.DownloadView"/>
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0"></property>
	</bean>
	<!-- <bean id="hello1" class="test.spring.bean.Hellobean2"></bean> -->
	<!-- 자동 객체 생성 -->
	<!-- 특정패키지안의 클래스를 스캔하고 인스터스를 생성한다. -->
	<context:component-scan base-package="test"/>
	
	<bean id="mv" class="org.springframework.web.servlet.ModelAndView"/>
	<bean id="day1" class="java.util.Date"/>
	<bean id="day2" class="java.util.Date"/>
	<bean id="tdto1" class="test.spring.model.TvDTO">
		<property name="power" value="true" ></property>
		<property name="ch" value="10"></property>
	</bean>
	<bean id="tdto2" class="test.spring.model.TvDTO">
		<property name="power" value="false" ></property>
		<property name="ch" value="20"></property>
	</bean>
	<!-- <bean id="tmbdto" class="test.spring.model.TestMybatisDTO"/> -->
	<!-- 
	<bean id="dto1" class="test.spring.model.TestDTO">
		<property name="id" value="spring"/>
		<property name="pw" value="1111"/>
		<property name="reg" ref="day2"/>
	</bean>
	<bean id="dto2" class="test.spring.model.TestDTO">
		<constructor-arg name="pw" value="java"></constructor-arg>
		<constructor-arg name="id" value="3333"></constructor-arg>
	</bean> -->
	<!-- Hellobean hello =new Hellobean -->
	<!--	 	
	<bean id="a" class="test.spring.bean.Hellobean"/>
	<bean id="test" class="test.spring.bean.Testbean"/> 
	-->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="order" value="1"></property>
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="-1"/><!--  1메가바이트 업로드크기제한없음-->
		<property name="defaultEncoding" value="utf-8"/>
	</bean>
	<!-- DB mybatis setting -->
	<!-- destory-method 해당 db가종료되어있을때 어떻게 할거냐 ->close라는 메서드를 사용하겟다. -->
	<bean 
		id="dataSource" 
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" 
		p:driverClassName="oracle.jdbc.driver.OracleDriver"
		p:url="jdbc:oracle:thin:@192.168.0.252:1521:orcl"
		p:username="java11" 
		p:password="java11"
	/>
	<!-- 커넥션 풀  
		db연결 정보:datasource 매퍼위치와 type-alias에 대한 정보 :mybatis-config.xml에 설정
		커넥션 connection =session
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="/WEB-INF/mybatis/mybatis-config.xml"/>
	</bean>
	<!-- sql문 날릴때 필요한 것 
		@autowired해서 아래 빈을 가져다 사용하게 됨
		detory-method="clearCahe":종료시 무엇을 할지 지정하는 속성 ->마이바티스 장점
		-->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>	
</beans>