<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-4.3.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop-4.3.xsd"
   >
   
   <!--  어노테이션을 이용한 aspect클래스 사용방법-->
   
   <!-- 해당 패키지에 있는 컨트롤러 빈 스캔 -->
    <context:component-scan base-package="spring.aop.advice"/>
   <aop:aspectj-autoproxy/>
   <!-- 관점의 타겟 클래스 : 공통기능 구현 클래스 -->
   <bean id="advice" class="spring.aop.advice.Advice"/>
   <!-- aop설정
           expression : execution(핵심기능의 메서드(메서드명)를 범용적으로 필터링 되게 작성)
           * : 모든 접근 지정자 패키지 클래스명 상관없다.
           main *     : main으로 시작하는 메서드명
           (..)    : 매개변수 개수 상관없다.
    -->
   <aop:config>
           <aop:aspect ref="advice">
               <aop:around pointcut="execution(* spring.aop.advice..*(..))" 
               method="trace"/>
           </aop:aspect>
   </aop:config>
   </beans>